datasource db {
  provider = "sqlite"
  url      = "file:./mood_tracker.db"
}

generator client {
  provider = "go run github.com/steebchen/prisma-client-go"
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  password     String
  appPassword  String?
  moods        Mood[]
  tags         Tag[]
  userFoods    UserFood[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Food {
  id         Int        @id @default(autoincrement())
  name       String
  calories   Int
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId Int
  userFoods  UserFood[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model UserFood {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  food      Food     @relation(fields: [foodId], references: [id])
  foodId    Int
  quantity  Int      @default(1)
  eatenAt   DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  foods     Food[]   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Mood {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  emoji       String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  tags        Tag[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  moods     Mood[]
  isPublic  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([name, userId])
}